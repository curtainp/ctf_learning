* Description

just an innocent little avocado
* Solution
:PROPERTIES:
:ID:       601bcd3e-f635-41c7-a9a1-17382b528d51
:END:

The normal tools (~strings~ ~exiftool~) give us trivial information, but the ~binwalk~ indicate there are
files embedded.

#+begin_src shell
ctf ❯ binwalk avocado.jpg

                                                                                    /home/curtain/Documents/ctf/2025/scriptctf-0/forensics/just-some-avocado/avocado.jpg
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DECIMAL                            HEXADECIMAL                        DESCRIPTION
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0                                  0x0                                JPEG image, total size: 100599 bytes
100599                             0x188F7                            ZIP archive, file count: 2, total size: 408744 bytes
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Analyzed 1 file for 85 file signatures (187 magic patterns) in 8.0 milliseconds
#+end_src

But there password needs when we extract the files out. We can use ~hashcat~ to crack, but first we
need the =hash=, here ~john~ will help us:

#+begin_example
 ./zip2john ~/Documents/ctf/2025/scriptctf-0/forensics/just-some-avocado/avocado.jpg -s
 avocado.jpg:$pkzip$2*1*1*0*8*24*6cd4*0bd6da0575615b94ae31035ac9d1c8788a24ea0de3a34e116abc6df32146b93ccdd15fd1*2*0*ea*de*f1b363b7*188f7*49*0*ea*9a00*06bda6dfd28f8144ef8268b6dc5e96a9c5812a5b346e36b1882fe39e1546c9eceb715bb83c6fad10cd3c18ddc156b496e45622564905a8725a5aeba3957b5de2ff4514a8967030c20c0235bd1f2f18cd6042b8f9def121a1157115390213e3bbd3b191c5c3227dbcbfbcc5b8a15ce0797c75ff32b8df0ed5f294785da83afa16e6bbbc8938a093df54404f3b2b2babdc8d045caa091b8a0fa70589e6696105a0b1abb74a6db513086c3d9e71cf7214bbee76d8ab75e50882a3f63794f9983f6d8ba9c8e27a0dc4110294b19008304109ca2691024027cb7b32413b91fb8ee08b7f19674a68ef5b98b438*$/pkzip$::avocado.jpg:justsomezip.zip, staticnoise.wav:/home/curtain/Documents/ctf/2025/scriptctf-0/forensics/just-some-avocado/avocado.jp
#+end_example

After that, the ~hashcat~ mode with =17225= will get the password:
#+begin_example
 ctf ❯ hashcat -m 17225 hash.txt /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt
 hashcat (v7.1.0) starting
 
 Successfully initialized the NVIDIA main driver CUDA runtime library.
 
 Failed to initialize NVIDIA RTC library.
 
 * Device #1: CUDA SDK Toolkit not installed or incorrectly installed.
              CUDA SDK Toolkit required for proper device support and utilization.
              For more information, see: https://hashcat.net/faq/wrongdriver
              Falling back to OpenCL runtime.
 
 OpenCL API (OpenCL 3.0 CUDA 12.9.90) - Platform #1 [NVIDIA Corporation]
 ======================================================================
 * Device #01: NVIDIA GeForce RTX 4060 Ti, 7803/7803 MB (1950 MB allocatable), 34MCU
 
 Minimum password length supported by kernel: 0
 Maximum password length supported by kernel: 256
 Minimum salt length supported by kernel: 0
 Maximum salt length supported by kernel: 256
 
 Hashes: 1 digests; 1 unique digests, 1 unique salts
 Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates
 Rules: 1
 
 Optimizers applied:
 * Not-Iterated
 * Single-Hash
 * Single-Salt
 
 Watchdog: Temperature abort trigger set to 90c
 
 Initializing backend runtime for device #1. Please be patient...
 Host memory allocated for this attack: 533 MB (26794 MB free)
 
 Dictionary cache built:
 * Filename..: /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt
 * Passwords.: 14344391
 * Bytes.....: 139921497
 * Keyspace..: 14344384
 * Runtime...: 0 secs
 
 [s]tatus [p]ause [b]ypass [c]heckpoint [f]inish [q]uit =>
 
 Session..........: hashcat
 Status...........: Running
 Hash.Mode........: 17225 (PKZIP (Mixed Multi-File))
 Hash.Target......: $pkzip$2*1*1*0*8*24*6cd4*0bd6da0575615b94ae31035ac9...pkzip$
 Time.Started.....: Tue Aug 19 11:59:11 2025 (0 secs)
 Time.Estimated...: Tue Aug 19 11:59:11 2025 (0 secs)
 Kernel.Feature...: Pure Kernel (password length 0-256 bytes)
 Guess.Base.......: File (/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt)
 Guess.Queue......: 1/1 (100.00%)
 Speed.#01........: 25199.0 kH/s (0.10ms) @ Accel:37 Loops:1 Thr:64 Vec:1
 Recovered........: 0/1 (0.00%) Digests (total), 0/1 (0.00%) Digests (new)
 Progress.........: 483072/14344384 (3.37%)
 Rejected.........: 0/483072 (0.00%)
 Restore.Point....: 483072/14344384 (3.37%)
 Restore.Sub.#01..: Salt:0 Amplifier:0-1 Iteration:0-1
 Candidate.Engine.: Device Generator
 Candidates.#01...: mummy1993 -> zebra77
 Hardware.Mon.#01.: Temp: 47c Fan:  0% Util:  0% Core:2535MHz Mem:8751MHz Bus:8
 
 $pkzip$2*1*1*0*8*24*6cd4*0bd6da0575615b94ae31035ac9d1c8788a24ea0de3a34e116abc6df32146b93ccdd15fd1*2*0*ea*de*f1b363b7*188f7*49*0*ea*9a00*06bda6dfd28f8144ef8268b6dc5e96a9c5812a5b346e36b1882fe39e1546c9eceb715bb83c6fad10cd3c18ddc156b496e45622564905a8725a5aeba3957b5de2ff4514a8967030c20c0235bd1f2f18cd6042b8f9def121a1157115390213e3bbd3b191c5c3227dbcbfbcc5b8a15ce0797c75ff32b8df0ed5f294785da83afa16e6bbbc8938a093df54404f3b2b2babdc8d045caa091b8a0fa70589e6696105a0b1abb74a6db513086c3d9e71cf7214bbee76d8ab75e50882a3f63794f9983f6d8ba9c8e27a0dc4110294b19008304109ca2691024027cb7b32413b91fb8ee08b7f19674a68ef5b98b438*$/pkzip$:impassive3428
 
 Session..........: hashcat
 Status...........: Cracked
 Hash.Mode........: 17225 (PKZIP (Mixed Multi-File))
 Hash.Target......: $pkzip$2*1*1*0*8*24*6cd4*0bd6da0575615b94ae31035ac9...pkzip$
 Time.Started.....: Tue Aug 19 11:59:11 2025 (0 secs)
 Time.Estimated...: Tue Aug 19 11:59:11 2025 (0 secs)
 Kernel.Feature...: Pure Kernel (password length 0-256 bytes)
 Guess.Base.......: File (/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt)
 Guess.Queue......: 1/1 (100.00%)
 Speed.#01........: 24905.3 kH/s (0.09ms) @ Accel:37 Loops:1 Thr:64 Vec:1
 Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)
 Progress.........: 7407104/14344384 (51.64%)
 Rejected.........: 0/7407104 (0.00%)
 Restore.Point....: 7326592/14344384 (51.08%)
 Restore.Sub.#01..: Salt:0 Amplifier:0-1 Iteration:0-1
 Candidate.Engine.: Device Generator
 Candidates.#01...: inloveaccidently -> iloveimran12
 Hardware.Mon.#01.: Temp: 47c Fan:  0% Util:  0% Core:2535MHz Mem:8751MHz Bus:8
 
 Started: Tue Aug 19 11:58:48 2025
 Stopped: Tue Aug 19 11:59:12 2025
#+end_example

After extract files out, there are another =zip= encrypted file and a =wav= audio. this time the =zip=
password can't crack by *rockyou.txt* dictionary. But when we investigate the audio file, the
=spectrogram= will hint us the password:

#+DOWNLOADED: screenshot @ 2025-08-19 12:25:42
[[file:2025-08-19_12-25-42_screenshot.png]]

Use that will get the final flag.
