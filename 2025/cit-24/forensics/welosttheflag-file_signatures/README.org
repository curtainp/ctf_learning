* Description

Sorry everyone, we unfortunately lost the flag for this challenge.

* Solution

We get a file name =lost.png=, and ~file~ it give us that:
#+begin_src bash
> file lost.png
lost.png: data
#+end_src

So seems that image file was corrupted. Let's load it into hex editor to get file header or other
metadata. 
#+begin_example
00000000  00 c2 ba 60 00 10 4a 46  49 46 00 01 01 01 00 48  |...`..JFIF.....H|
00000010  00 48 00 00 ff db 00 43  00 0a 07 07 08 07 06 0a  |.H.....C........|
00000020  08 08 08 0b 0a 0a 0b 0e  18 10 0e 0d 0d 0e 1d 15  |................|
00000030  16 11 18 23 1f 25 24 22  1f 22 21 26 2b 37 2f 26  |...#.%$"."!&+7/&|
00000040  29 34 29 21 22 30 41 31  34 39 3b 3e 3e 3e 25 2e  |)4)!"0A149;>>>%.|
00000050  44 49 43 3c 48 37 3d 3e  3b ff db 00 43 01 0a 0b  |DIC<H7=>;...C...|
00000060  0b 0e 0d 0e                                       |....|
#+end_example

According to the ~JFIF~ string, we know that is a =jpg= image, but the header seems modified. Let's load
a normal =jpg= file.
#+begin_example
00000000  ff d8 ff e0 00 10 4a 46  49 46 00 01 01 01 00 48  |......JFIF.....H|
00000010  00 48 00 00 ff e1 00 42  45 78 69 66 00 00 4d 4d  |.H.....BExif..MM|
00000020  00 2a 00 00 00 08 00 02  01 12 00 03 00 00 00 01  |.*..............|
00000030  00 01 00 00 01 31 00 02  00 00 00 13 00 00 00 26  |.....1.........&|
#+end_example

So let's correct the first 4 bytes in header, luckily after that we get the answer.

** Learned

Wikipedia has a awesome list of file signatures:
https://en.wikipedia.org/wiki/List_of_file_signatures
